{"version":3,"sources":["assets/user.jpg","assets/plus-1.svg","view/input.js","view/dropdown.js","view/sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Input","props","react_default","a","createElement","className","type","id","concat","autoFocus","Dropdown","onClick","copy","edit","remove","Sidebar","state","showInput","contacts","shortid","generate","data","html","selectID","toggleContextMenu","e","target","slice","indexOf","document","querySelectorAll","length","_this","setState","getElementById","classList","toggle","forEach","item","addInput","addItemToState","element","ind","querySelector","value","index","console","log","Object","toConsumableArray","saveEditedToState","input","i","copyText","innerText","navigator","clipboard","writeText","add","appendChild","changeText","evt","_this2","this","body","addEventListener","contains","_this3","Fragment","src","user","alt","map","plus","view_dropdown","src_view_input","react_contenteditable_default","innerRef","contentEditable","disabled","onChange","tagName","Component","App","view_sidebar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60abbcfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.2b6ae890.jpg\";","module.exports = __webpack_public_path__ + \"static/media/plus-1.2d4b8914.svg\";","import React from 'react'\r\nimport './input.css'\r\n\r\nconst Input = (props) => (\r\n    <div className=\"input\">\r\n        <div className=\"text\">{props.type}:</div> \r\n        <input \r\n            id={`${props.id}-input`}\r\n            className=\"num\" \r\n            autoFocus \r\n            type=\"text\"\r\n        /> \r\n    </div>\r\n)\r\n\r\nexport default Input;","import React from 'react'\r\nimport './dropdown.css'\r\n\r\nconst Dropdown = (props) => (\r\n    <div className=\"dropdown-content\" id={`${props.id}-drop`}>\r\n        <li onClick={props.copy}>Копировать</li>\r\n        <li onClick={props.edit}>Редактировать</li>\r\n        <li onClick={props.remove}>Удалить</li>\r\n    </div>\r\n)\r\n\r\n \r\nexport default Dropdown;","import React, { Component } from 'react'\r\nimport shortid from 'shortid'\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\nimport user from 'assets/user.jpg'\r\nimport './sidebar.css'\r\nimport Input from './input'\r\nimport Dropdown from './dropdown'\r\nimport './input.css'\r\nimport plus from 'assets/plus-1.svg'\r\n\r\n\r\nclass Sidebar extends Component {\r\n    state = {\r\n        showInput: false,\r\n        type: \"\",\r\n        contacts: [\r\n            {id: shortid.generate(), data: \"vitalya@gmail.com\", type: \"Емейл\"},\r\n            {id: shortid.generate(), data: \"vitalya.getsome.com\", type: \"Ссылка\"},\r\n            {id: shortid.generate(), data: \"streeet 13\", type: \"Адрес\"},\r\n            {id: shortid.generate(), data: \"0934324352\", type: \"Телефон\"}\r\n        ],\r\n        id: \"\",\r\n        html: \"<p>Lorem Ipsum - это текст-'рыба', часто используемый в печати и веб-дизайне. Lorem Ipsum является стандартной 'рыбой' для текстов на латинице с начала XVI века. В то время некий безымянный печатник создал большую коллекцию размеров и форм шрифтов, используя Lorem Ipsum для распечатки образцов. Lorem Ipsum не только успешно пережил без заметных изменений пять веков, но и перешагнул в электронный дизайн. Его популяризации в новое время послужили публикация листов Letraset с образцами Lorem Ipsum в 60-х годах и, в более недавнее время, программы электронной вёрстки типа Aldus PageMaker, в шаблонах которых используется Lorem Ipsum.</p>\",\r\n        selectID: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.addEventListener('click', (e) => {\r\n\r\n            this.toggleContextMenu(e)\r\n\r\n            if (document.getElementById('editInput') !== null && e.target.classList.contains('contact')) {\r\n                document.getElementById('editInput').remove()\r\n                document.querySelector('.hide').classList.remove(\"hide\")\r\n            }\r\n\r\n            if (!e.target.classList.contains('edit') && document.getElementById('editInput') !== null) {\r\n                this.saveEditedToState()\r\n            }\r\n\r\n            if (!e.target.classList.contains('num') && this.state.showInput) {\r\n                this.addItemToState()\r\n            } \r\n        })\r\n    }\r\n\r\n    toggleContextMenu = (e) => {\r\n        let selectID = e.target.id.slice(0, e.target.id.indexOf('-item'))\r\n        if (e.target.className === 'contact' && document.querySelectorAll(`.show`).length === 0) {\r\n            this.setState({selectID: selectID})\r\n            document.getElementById(`${this.state.selectID}-drop`).classList.toggle('show')\r\n        } else {\r\n            document.querySelectorAll(`.show`).forEach(item => item.classList.remove('show'))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    addInput = (type, id) => {\r\n        this.state.showInput \r\n        ? this.setState({ showInput: false})\r\n        : this.setState({ showInput: true, type: type, id: id})\r\n    }\r\n\r\n    addItemToState = () => {\r\n        let element, ind\r\n\r\n        document.querySelector('.num').value !== \"\"\r\n        ? element = document.querySelector('.num').value\r\n        : element = \"...\"\r\n\r\n        this.state.contacts.forEach((item, index) => item.id === this.state.id ? ind = index : console.log('hzhz'))\r\n        this.setState({\r\n            contacts: [\r\n                ...this.state.contacts.slice(0, ind + 1),\r\n                {id: shortid.generate(), data: element, type: this.state.type},\r\n                ...this.state.contacts.slice(ind + 1, this.state.contacts.length)\r\n            ],\r\n            showInput: false\r\n        })\r\n    }\r\n\r\n    saveEditedToState = () => {\r\n        let input = document.getElementById('editInput')\r\n        for (let i = 0; i < this.state.contacts.length; i++) {\r\n            if (this.state.contacts[i].id === this.state.selectID) {\r\n                console.log(input.value)\r\n                this.setState({\r\n                    contacts: [\r\n                        ...this.state.contacts.slice(0, i),\r\n                        {id: this.state.contacts[i].id, data: input.value, type: this.state.contacts[i].type},\r\n                        ...this.state.contacts.slice(i + 1, this.state.contacts.length + 1)\r\n                    ]\r\n                })\r\n                input.remove()\r\n                document.getElementById(`${this.state.selectID}-num-el`).classList.remove(\"hide\")\r\n            }   \r\n        }\r\n    }\r\n\r\n    copy = () => {\r\n        let copyText = document.getElementById(`${this.state.selectID}-item`).innerText\r\n        navigator.clipboard.writeText(copyText)\r\n    }\r\n\r\n    edit = () => {\r\n        document.getElementById(`${this.state.selectID}-num-el`).classList.add(\"hide\")\r\n        let input = document.createElement('input');\r\n        input.className = \"edit num\"\r\n        input.id = \"editInput\"\r\n        for (let i = 0; i < this.state.contacts.length; i++) {\r\n            this.state.contacts[i].id === this.state.selectID\r\n            ? input.value = `${this.state.contacts[i].data}`\r\n            : console.log(null)\r\n        }\r\n        document.getElementById(this.state.selectID).appendChild(input)\r\n    }\r\n\r\n    remove = () => {\r\n        for (let i = 0; i < this.state.contacts.length; i++) {\r\n            if (this.state.contacts[i].id === this.state.selectID) {\r\n                this.setState({\r\n                    contacts: [\r\n                        ...this.state.contacts.slice(0, i),\r\n                        ...this.state.contacts.slice(i + 1, this.state.contacts.length + 1)\r\n                    ]\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    changeText = evt => {\r\n        this.setState({html: evt.target.value});\r\n        console.log('text edited')\r\n    };\r\n\r\n    render() { \r\n        return (\r\n            <>\r\n                <div className=\"header\">\r\n                    <h1 className=\"client\">Клиент</h1>\r\n                    <h1 className=\"crm\">CRM</h1>\r\n                    <h1 className=\"crm\">CRM</h1>\r\n                </div>\r\n                <div className=\"main\">\r\n                    <div className=\"user\">\r\n                        <img src={user} alt=\"\"/>\r\n                        <span className=\"name\">Виталий Давиденко</span>\r\n                    </div>\r\n                    <h2>Канал связи:</h2>\r\n                    <div className=\"social\">\r\n                        <div className=\"item\">\r\n                            <i className=\"fab fa-telegram-plane\"></i>\r\n                            @Vitaliy243\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <i className=\"fas fa-phone-volume\"></i>\r\n                            Виталий Давиденко\r\n                        </div>\r\n                    </div>\r\n                    <h2>Контакти: </h2>\r\n                    <div className=\"contacts\">\r\n                        {this.state.contacts.map(item => (\r\n                            <>\r\n                                <div className=\"number\" id={item.id}>\r\n                                    <div className=\"type\">\r\n                                        <div id={`${item.id}-type`}>{item.type}</div>\r\n                                        <div>:</div> \r\n                                    </div>                                    \r\n                                    <div id={`${item.id}-num-el`} className=\"num-el\">\r\n                                        <span id={`${item.id}-plus`} onClick={() => this.addInput(item.type, item.id)}>\r\n                                            <img className=\"plus\" src={plus} alt=\"\"/>\r\n                                        </span>\r\n                                        <span>\r\n                                            <div id={`${item.id}-item`} className=\"contact\">{item.data}</div>\r\n                                            <Dropdown \r\n                                                id={item.id} \r\n                                                copy={this.copy} \r\n                                                edit={this.edit} \r\n                                                remove={this.remove} \r\n                                            />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                {this.state.showInput && this.state.id === item.id && <Input id={item.id} type={this.state.type}/>}\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n                    <h2>Примечание:</h2>\r\n                    <div className=\"adds\">\r\n                        <ContentEditable\r\n                            innerRef={this.contentEditable}\r\n                            html={this.state.html} \r\n                            disabled={false}      \r\n                            onChange={this.changeText} \r\n                            tagName='p' \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Sidebar;","import React from 'react'\nimport './reset-css.css'\nimport './App.css'\nimport Sidebar from 'view/sidebar'\n\nconst App = () => (\n  <div>\n    <Sidebar />\n  </div>\n)\n \nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}