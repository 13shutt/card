{"version":3,"sources":["assets/user.jpg","view/input.js","view/sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Input","props","react_default","a","createElement","className","type","autoFocus","onClick","event","Sidebar","state","showInput","contacts","id","number","addNumber","_this","setState","console","log","addNumberToState","ind","document","querySelector","value","forEach","item","index","concat","Object","toConsumableArray","slice","getRandomInt","length","min","max","Math","floor","random","e","_this2","this","Fragment","es6","handleClick","src","user","alt","map","handleRightClick","view_input","contentEditable","Component","App","view_sidebar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uSCezBC,eAZD,SAACC,GAAD,OACVC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQJ,EAAMK,KAA7B,KACAJ,EAAAC,EAAAC,cAAA,SACIC,UAAU,MACVE,WAAS,EACTD,KAAK,SAETJ,EAAAC,EAAAC,cAAA,KAAGI,QAASP,EAAMQ,OAAlB,eCuHOC,6MA1HXC,MAAQ,CACJC,WAAW,EACXN,KAAM,GACNO,SAAU,CACN,CAACC,GAAI,EAAGC,OAAQ,oBAAqBT,KAAM,kCAC3C,CAACQ,GAAI,EAAGC,OAAQ,sBAAuBT,KAAM,wCAC7C,CAACQ,GAAI,EAAGC,OAAQ,aAAcT,KAAM,kCACpC,CAACQ,GAAI,EAAGC,OAAQ,aAAcT,KAAM,+CAExCQ,GAAI,MAQRE,UAAY,SAACV,EAAMQ,GACfG,EAAKN,MAAMC,UACTK,EAAKC,SAAS,CAAEN,WAAW,IAC3BK,EAAKC,SAAS,CAAEN,WAAW,EAAMN,KAAMA,EAAMQ,GAAIA,IACnDK,QAAQC,IAAIN,MAGhBO,iBAAmB,WACf,IAAIN,EACAO,EAEAP,EADAQ,SAASC,cAAc,QAAQC,MAAQ,EAC9BF,SAASC,cAAc,QAAQC,MAE/B,MAEbR,EAAKN,MAAME,SAASa,QAAQ,SAACC,EAAMC,GAAP,OAAiBD,EAAKb,KAAOG,EAAKN,MAAMG,GAAKQ,EAAMM,EAAQ,OACvFT,QAAQC,IAAIE,EAAK,iBACjBL,EAAKC,SAAS,CACVL,SAAQ,GAAAgB,OAAAC,OAAAC,EAAA,EAAAD,CACDb,EAAKN,MAAME,SAASmB,MAAM,EAAGV,EAAM,IADlC,CAEJ,CAACR,GAAIG,EAAKgB,aAAa,EAAG,KAAOlB,OAAQA,EAAQT,KAAMW,EAAKN,MAAML,OAF9DwB,OAAAC,EAAA,EAAAD,CAGDb,EAAKN,MAAME,SAASmB,MAAMV,EAAM,EAAGL,EAAKN,MAAME,SAASqB,YAGlEjB,EAAKD,yFA7BImB,EAAKC,GACd,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,wCAgCrDhB,QAAQC,IAAI,iDAGCN,EAAI0B,GACjBrB,QAAQC,IAAIN,oCAGP,IAAA2B,EAAAC,KACL,OACIxC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwC,SAAA,KAIAzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAa9B,GAAG,0BACZZ,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAUpC,QAASkC,KAAKG,aAAxB,4EAGA3C,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAUpC,QAASkC,KAAKG,aAAxB,gEAGA3C,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAUpC,QAASkC,KAAKG,aAAxB,+CAKA3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,wCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,OACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,QAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAK0C,IAAKC,IAAMC,IAAI,KACpB9C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,sGAEJH,EAAAC,EAAAC,cAAA,4EACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BADjB,eAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBADjB,sGAKJH,EAAAC,EAAAC,cAAA,gEACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVqC,KAAK/B,MAAME,SAASoC,IAAI,SAAAtB,GAAI,OACzBzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwC,SAAA,KACAzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASS,GAAIa,EAAKb,IAC7BZ,EAAAC,EAAAC,cAAA,WAAMuB,EAAKrB,KAAX,KACAJ,EAAAC,EAAAC,cAAA,QAAMI,QAAS,kBAAMiC,EAAKzB,UAAUW,EAAKrB,KAAMqB,EAAKb,MAChDZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAEjBH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAoB9B,GAAG,0BACnBZ,EAAAC,EAAAC,cAAA,OAAKI,QAAS,kBAAMiC,EAAKS,iBAAiBvB,EAAKb,MAAMa,EAAKZ,WAIrE0B,EAAK9B,MAAMC,WAAa6B,EAAK9B,MAAMG,KAAOa,EAAKb,IAAMZ,EAAAC,EAAAC,cAAC+C,EAAD,CAAO7C,KAAMmC,EAAK9B,MAAML,KAAMG,MAAOgC,EAAKpB,uBAIxGnB,EAAAC,EAAAC,cAAA,2EACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGgD,gBAAgB,QAAnB,swFAjHFC,aCIPC,EANH,kBACVpD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmD,EAAD,QCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAASxC,SAASyC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ff334cf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.2b6ae890.jpg\";","import React from 'react'\r\nimport './input.css'\r\n\r\nconst Input = (props) => (\r\n    <div className=\"input\">\r\n        <div className=\"text\">{props.type}:</div> \r\n        <input \r\n            className=\"num\" \r\n            autoFocus \r\n            type=\"text\"\r\n        /> \r\n        <i onClick={props.event}>+</i>\r\n    </div>\r\n)\r\n\r\nexport default Input;","import React, { Component } from 'react'\r\nimport user from 'assets/user.jpg'\r\nimport './sidebar.css'\r\nimport Input from './input'\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\n\r\n\r\nclass Sidebar extends Component {\r\n    state = {\r\n        showInput: false,\r\n        type: \"\",\r\n        contacts: [\r\n            {id: 0, number: \"vitalya@gmail.com\", type: \"Емейл\"},\r\n            {id: 1, number: \"vitalya.getsome.com\", type: \"Ссылка\"},\r\n            {id: 2, number: \"streeet 13\", type: \"Адрес\"},\r\n            {id: 3, number: \"0934324352\", type: \"Телефон\"}\r\n        ],\r\n        id: \"\"\r\n    }\r\n\r\n    getRandomInt(min, max){\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n    \r\n\r\n    addNumber = (type, id) => {\r\n        this.state.showInput \r\n        ? this.setState({ showInput: false})\r\n        : this.setState({ showInput: true, type: type, id: id})\r\n        console.log(id)\r\n    }\r\n\r\n    addNumberToState = () => {\r\n        let number\r\n        let ind\r\n        if (document.querySelector('.num').value > 0) {\r\n            number = document.querySelector('.num').value\r\n        } else {\r\n            number = \"...\"\r\n        }\r\n        this.state.contacts.forEach((item, index) => item.id === this.state.id ? ind = index : null)\r\n        console.log(ind, 'have somefuck')\r\n        this.setState({\r\n            contacts: [\r\n                ...this.state.contacts.slice(0, ind + 1),\r\n                {id: this.getRandomInt(1, 1000), number: number, type: this.state.type},\r\n                ...this.state.contacts.slice(ind + 1, this.state.contacts.length)\r\n            ]\r\n        })\r\n        this.addNumber()\r\n    }\r\n\r\n    handleClick() {\r\n        console.log(\"fire\");\r\n    }\r\n\r\n    handleRightClick(id, e) {\r\n        console.log(id)\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <>\r\n\r\n            \r\n        \r\n            <ContextMenu id=\"some_unique_identifier\">\r\n                <MenuItem onClick={this.handleClick}>\r\n                    Редагировать\r\n                </MenuItem>\r\n                <MenuItem onClick={this.handleClick}>\r\n                    Копировать\r\n                </MenuItem>\r\n                <MenuItem onClick={this.handleClick}>\r\n                    Удалить\r\n                </MenuItem>\r\n            </ContextMenu>\r\n\r\n                <div className=\"header\">\r\n                    <h1 className=\"client\">Клиент</h1>\r\n                    <h1 className=\"crm\">CRM</h1>\r\n                    <h1 className=\"crm\">CRM</h1>\r\n                </div>\r\n                <div className=\"main\">\r\n                    <div className=\"user\">\r\n                        <img src={user} alt=\"\"/>\r\n                        <span className=\"name\">Виталий Давиденко</span>\r\n                    </div>\r\n                    <h2>Канал связи:</h2>\r\n                    <div className=\"social\">\r\n                        <div className=\"item\">\r\n                            <i className=\"fab fa-telegram-plane\"></i>\r\n                            @Vitaliy243\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <i className=\"fas fa-phone-volume\"></i>\r\n                            Виталий Давиденко\r\n                        </div>\r\n                    </div>\r\n                    <h2>Контакти: </h2>\r\n                    <div className=\"contacts\">\r\n                        {this.state.contacts.map(item => (\r\n                            <>\r\n                            <div className=\"number\" id={item.id}>\r\n                                <div>{item.type}:</div> \r\n                                <span onClick={() => this.addNumber(item.type, item.id)}>\r\n                                    <i className=\"fas fa-plus-circle\"></i>\r\n                                </span>\r\n                                <span>\r\n                                    <ContextMenuTrigger id=\"some_unique_identifier\">\r\n                                        <div onClick={() => this.handleRightClick(item.id)}>{item.number}</div>\r\n                                    </ContextMenuTrigger>\r\n                                </span>\r\n                            </div>\r\n                            {this.state.showInput && this.state.id === item.id && <Input type={this.state.type} event={this.addNumberToState}/>}\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n                    <h2>Примечание:</h2>\r\n                    <div className=\"adds\">\r\n                        <p contentEditable=\"true\">\r\n                        Lorem Ipsum - это текст-\"рыба\", часто используемый в печати и веб-дизайне. Lorem Ipsum является стандартной \"рыбой\" для текстов на латинице с начала XVI века. В то время некий безымянный печатник создал большую коллекцию размеров и форм шрифтов, используя Lorem Ipsum для распечатки образцов. Lorem Ipsum не только успешно пережил без заметных изменений пять веков, но и перешагнул в электронный дизайн. Его популяризации в новое время послужили публикация листов Letraset с образцами Lorem Ipsum в 60-х годах и, в более недавнее время, программы электронной вёрстки типа Aldus PageMaker, в шаблонах которых используется Lorem Ipsum.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Sidebar;","import React from 'react'\nimport './reset-css.css'\nimport './App.css'\nimport Sidebar from 'view/sidebar'\n\nconst App = () => (\n  <div>\n    <Sidebar />\n  </div>\n)\n \nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}