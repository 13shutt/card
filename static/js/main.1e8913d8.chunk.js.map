{"version":3,"sources":["assets/user.jpg","view/input.js","view/dropdown.js","view/sidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Input","props","react_default","a","createElement","className","type","autoFocus","Dropdown","id","concat","onClick","copy","edit","remove","Sidebar","state","showInput","contacts","number","contextID","selectID","addNumber","_this","setState","addNumberToState","ind","document","querySelector","value","forEach","item","index","console","log","Object","toConsumableArray","slice","getRandomInt","length","saveEditedToState","getElementById","trueID","indexOf","i","children","classList","copyText","innerText","navigator","clipboard","writeText","add","input","appendChild","_this2","this","body","addEventListener","e","target","path","keyCode","querySelectorAll","min","max","Math","floor","random","_this3","Fragment","src","user","alt","map","view_dropdown","view_input","Component","App","view_sidebar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e8913d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.2b6ae890.jpg\";","import React from 'react'\r\nimport './input.css'\r\n\r\nconst Input = (props) => (\r\n    <div className=\"input\">\r\n        <div className=\"text\">{props.type}:</div> \r\n        <input \r\n            className=\"num\" \r\n            autoFocus \r\n            type=\"text\"\r\n        /> \r\n    </div>\r\n)\r\n\r\nexport default Input;","import React from 'react'\r\nimport './dropdown.css'\r\n\r\nconst Dropdown = (props) => (\r\n    <div className=\"dropdown-content\" id={`${props.id}-drop`}>\r\n        <li onClick={props.copy}>Копировать</li>\r\n        <li onClick={props.edit}>Редактировать</li>\r\n        <li onClick={props.remove}>Удалить</li>\r\n    </div>\r\n)\r\n\r\n \r\nexport default Dropdown;","import React, { Component } from 'react'\r\nimport user from 'assets/user.jpg'\r\nimport './sidebar.css'\r\nimport Input from './input'\r\nimport Dropdown from './dropdown'\r\nimport './input.css'\r\n\r\n\r\nclass Sidebar extends Component {\r\n    state = {\r\n        showInput: false,\r\n        type: \"\",\r\n        contacts: [\r\n            {id: 0, number: \"vitalya@gmail.com\", type: \"Емейл\"},\r\n            {id: 1, number: \"vitalya.getsome.com\", type: \"Ссылка\"},\r\n            {id: 2, number: \"streeet 13\", type: \"Адрес\"},\r\n            {id: 3, number: \"0934324352\", type: \"Телефон\"}\r\n        ],\r\n        id: \"\",\r\n        contextID: \"\",\r\n        selectID: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.addEventListener('click', (e) => {\r\n            console.log(e.target, 'selectID')\r\n            e.path.length === 11\r\n            ? this.setState({selectID: e.path[1].id})\r\n            : console.log(e.path[1].id, 'selectID')\r\n            if (this.state.showInput) {\r\n                e.target === document.querySelector('.num')\r\n                ? console.log('zaebumba')\r\n                : this.addNumberToState()\r\n            } \r\n            if (e.target !== document.querySelector('#editInput') && document.querySelector('#editInput') !== null) {\r\n                console.log('popal')\r\n                this.saveEditedToState()\r\n                console.log(this.state.contacts)\r\n            } else {\r\n                console.log('nenopal')            \r\n            }\r\n        })\r\n        document.body.addEventListener('keydown', (e) => {\r\n            if (e.keyCode === 13 && this.state.showInput) {\r\n                this.addNumberToState()\r\n            }\r\n        })\r\n        document.body.addEventListener('click', (e) => {\r\n            if (e.path[1].id === e.path[2].id + '-num' && e.path.length === 11) {\r\n                this.setState({contextID: `${e.path[2].id} + '-num'`})\r\n                document.querySelectorAll('.show').length === 0\r\n                ? document.getElementById(`${e.path[2].id}-drop`).classList.add('show')\r\n                : document.querySelector('.show').classList.remove('show')\r\n            } else {\r\n                if (document.querySelectorAll('.show').length === 1) {\r\n                    document.querySelector('.show').classList.remove('show')\r\n                }\r\n            }\r\n            if (e.target.id === 'editInput') {\r\n                document.querySelectorAll('.show').forEach(item => {\r\n                    item.classList.remove('show')\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    getRandomInt(min, max){\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n    \r\n\r\n    addNumber = (type, id) => {\r\n        this.state.showInput \r\n        ? this.setState({ showInput: false})\r\n        : this.setState({ showInput: true, type: type, id: id})\r\n    }\r\n\r\n    addNumberToState = () => {\r\n        let number\r\n        let ind\r\n        if (document.querySelector('.num') !== null) {\r\n            if (document.querySelector('.num').value > 0) {\r\n                number = document.querySelector('.num').value\r\n            } else {\r\n                number = \"...\"\r\n            } \r\n        }\r\n\r\n        this.state.contacts.forEach((item, index) => item.id === this.state.id ? ind = index : null)\r\n        console.log(ind, 'have somefuck')\r\n        this.setState({\r\n            contacts: [\r\n                ...this.state.contacts.slice(0, ind + 1),\r\n                {id: this.getRandomInt(1, 1000), number: number, type: this.state.type},\r\n                ...this.state.contacts.slice(ind + 1, this.state.contacts.length)\r\n            ]\r\n        })\r\n        this.addNumber()\r\n    }\r\n\r\n    saveEditedToState = () => {\r\n        console.log(document.getElementById('editInput').value)\r\n        console.log(document.getElementById(this.state.selectID), this.state.selectID, 'id compare')\r\n        let trueID = this.state.selectID.slice(0, this.state.selectID.indexOf('-num'))\r\n        for (let i = 0; i < this.state.contacts.length; i++) {\r\n            if (this.state.contacts[i].id === +trueID) {\r\n                this.setState({\r\n                    contacts: [\r\n                        ...this.state.contacts.slice(0, i),\r\n                        {id: this.state.contacts[i].id, number: document.getElementById('editInput').value, type: this.state.contacts[i].type},\r\n                        ...this.state.contacts.slice(i + 1, this.state.contacts.length + 1)\r\n                    ]\r\n                })\r\n                document.getElementById('editInput').remove()\r\n                console.log(document.getElementById(this.state.selectID), this.state.selectID, 'id compare')\r\n                document.getElementById(this.state.selectID).children[0].classList.remove(\"hide\")\r\n            }   \r\n        }\r\n    }\r\n\r\n    copy = () => {\r\n        console.log('copy')\r\n        let copyText = document.getElementById(this.state.selectID).children[0].innerText\r\n        navigator.clipboard.writeText(copyText)\r\n    }\r\n\r\n    edit = () => {\r\n        console.log('edit', this.state.selectID.indexOf('-num'))\r\n        console.log('edit', this.state.selectID.slice(0, this.state.selectID.indexOf('-num')))\r\n        console.log('edit', document.getElementById(this.state.selectID).children)\r\n        document.getElementById(this.state.selectID).children[0].classList.add(\"hide\")\r\n        let input = document.createElement('input');\r\n        input.className = \"num\"\r\n        input.id = \"editInput\"\r\n        for (let i = 0; i < this.state.contacts.length; i++) {\r\n            `${this.state.contacts[i].id}-num` === this.state.selectID\r\n            ? input.value = `${this.state.contacts[i].number}`\r\n            : console.log(null)\r\n        }\r\n        document.getElementById(this.state.selectID).appendChild(input)\r\n    }\r\n\r\n    remove = () => {\r\n        console.log('remove', this.state.selectID)\r\n        for (let i = 0; i < this.state.contacts.length; i++) {\r\n            `${this.state.contacts[i].id}-num` === this.state.selectID \r\n            ?   this.setState({\r\n                contacts: [\r\n                    ...this.state.contacts.slice(0, i),\r\n                    ...this.state.contacts.slice(i + 1, this.state.contacts.length + 1)\r\n                ]\r\n            }) : console.log('azaza')\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <>\r\n                <div className=\"header\">\r\n                    <h1 className=\"client\">Клиент</h1>\r\n                    <h1 className=\"crm\">CRM</h1>\r\n                    <h1 className=\"crm\">CRM</h1>\r\n                </div>\r\n                <div className=\"main\">\r\n                    <div className=\"user\">\r\n                        <img src={user} alt=\"\"/>\r\n                        <span className=\"name\">Виталий Давиденко</span>\r\n                    </div>\r\n                    <h2>Канал связи:</h2>\r\n                    <div className=\"social\">\r\n                        <div className=\"item\">\r\n                            <i className=\"fab fa-telegram-plane\"></i>\r\n                            @Vitaliy243\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <i className=\"fas fa-phone-volume\"></i>\r\n                            Виталий Давиденко\r\n                        </div>\r\n                    </div>\r\n                    <h2>Контакти: </h2>\r\n                    <div className=\"contacts\">\r\n                        {this.state.contacts.map(item => (\r\n                            <>\r\n                                <div className=\"number\" id={item.id}>\r\n                                    <div>{item.type}:</div> \r\n                                    <span onClick={() => this.addNumber(item.type, item.id)}>\r\n                                        <i className=\"fas fa-plus-circle\"></i>\r\n                                    </span>\r\n                                    <span id={`${item.id}-num`}>\r\n                                        <div className=\"contact\">{item.number}</div>\r\n                                        <Dropdown \r\n                                            id={item.id} \r\n                                            copy={this.copy} \r\n                                            edit={this.edit} \r\n                                            remove={this.remove} \r\n                                            />\r\n                                    </span>\r\n                                </div>\r\n                                {this.state.showInput && this.state.id === item.id && <Input type={this.state.type}/>}\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n                    <h2>Примечание:</h2>\r\n                    <div className=\"adds\">\r\n                        <p> {/*  contentEditable=\"true\" */}\r\n                        Lorem Ipsum - это текст-\"рыба\", часто используемый в печати и веб-дизайне. Lorem Ipsum является стандартной \"рыбой\" для текстов на латинице с начала XVI века. В то время некий безымянный печатник создал большую коллекцию размеров и форм шрифтов, используя Lorem Ipsum для распечатки образцов. Lorem Ipsum не только успешно пережил без заметных изменений пять веков, но и перешагнул в электронный дизайн. Его популяризации в новое время послужили публикация листов Letraset с образцами Lorem Ipsum в 60-х годах и, в более недавнее время, программы электронной вёрстки типа Aldus PageMaker, в шаблонах которых используется Lorem Ipsum.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Sidebar;","import React from 'react'\nimport './reset-css.css'\nimport './App.css'\nimport Sidebar from 'view/sidebar'\n\nconst App = () => (\n  <div>\n    <Sidebar />\n  </div>\n)\n \nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}